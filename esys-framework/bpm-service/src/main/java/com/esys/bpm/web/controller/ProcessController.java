package com.esys.bpm.web.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.esys.bpm.common.BpmBaseResult;
import com.esys.bpm.dto.ProcessDto;
import com.esys.bpm.service.IProcessService;
import com.esys.bpm.web.controller.input.ProcessIdInput;
import com.esys.bpm.web.controller.input.ProcessXmlInput;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@SuppressWarnings({ "rawtypes" })
@RestController
@RequestMapping("api/v1/process")
@Api(tags = { "process" })
public class ProcessController {

	// Process Id => processId_versonNo şeklinde olmalı. Örn : 1_1
	@Autowired
	private IProcessService processService;

	@ApiOperation(value = "Controls the process if it satisfies rule set to create new instances on it", response = BpmBaseResult.class, responseContainer = "GatewayDto")
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Returns BpmBaseResult containing info, warning, error messages according to operation. Returns string id list showing which process components has error messages.", response = BpmBaseResult.class) })
	@PostMapping(path = "/compileProcess")
	public ResponseEntity<BpmBaseResult> compileProcess(
			@ApiParam(value = "Process xml which is generated by drag&drop page without individual detail information. It only includes general process and diagram info in order to draw process to screen", required = true) @RequestBody ProcessXmlInput processXml) {
		BpmBaseResult output = processService.compileProcess(processXml.getXml());
		return ResponseEntity.status(HttpStatus.OK).body(output);
	}

	@ApiOperation(value = "Saves the process without compiling it. Process saved as drafts are in unstable status. This means it can be modified any time but means nothing without successfully compiled", response = BpmBaseResult.class, responseContainer = "GatewayDto")
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Returns BpmBaseResult containing info, warning, error messages according to operation. Returns saved and updated xml string.", response = BpmBaseResult.class) })
	@PostMapping(path = "/saveAsDraft")
	public ResponseEntity<BpmBaseResult> saveAsDraft(
			@ApiParam(value = "Process xml which is generated by drag&drop page without individual detail information. It only includes general process and diagram info in order to draw process to screen", required = true) @RequestBody ProcessXmlInput processXml) {
		/*
		 * //includes all process components processXml =
		 * "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n" +
		 * "<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" id=\"Definitions_1h3k5o9\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\r\n"
		 * + "  <bpmn:process id=\"Process_1\" isExecutable=\"false\">\r\n" +
		 * "    <bpmn:startEvent id=\"StartEvent_1\" name=\"Start Process\">\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0bbzb9u</bpmn:outgoing>\r\n" +
		 * "    </bpmn:startEvent>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0bbzb9u\" sourceRef=\"StartEvent_1\" targetRef=\"Task_19bxtw8\" />\r\n"
		 * +
		 * "    <bpmn:exclusiveGateway id=\"ExclusiveGateway_1taafv2\" name=\"Exlusive Gateway 1\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_1ol6n2d</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0ignc72</bpmn:outgoing>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0nwfrgf</bpmn:outgoing>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_15jv6fj</bpmn:outgoing>\r\n" +
		 * "    </bpmn:exclusiveGateway>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_1ol6n2d\" sourceRef=\"Task_19bxtw8\" targetRef=\"ExclusiveGateway_1taafv2\" />\r\n"
		 * +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0ignc72\" name=\"APPROVE\" sourceRef=\"ExclusiveGateway_1taafv2\" targetRef=\"Task_10flmyb\" />\r\n"
		 * +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0uawk2b\" sourceRef=\"Task_10flmyb\" targetRef=\"ExclusiveGateway_1k0p8gm\" />\r\n"
		 * +
		 * "    <bpmn:inclusiveGateway id=\"ExclusiveGateway_1k0p8gm\" name=\"Inclusive Gateway 1\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_0uawk2b</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_16wegow</bpmn:outgoing>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_1m35ywh</bpmn:outgoing>\r\n" +
		 * "    </bpmn:inclusiveGateway>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_16wegow\" sourceRef=\"ExclusiveGateway_1k0p8gm\" targetRef=\"Task_1sgty32\" />\r\n"
		 * + "    <bpmn:serviceTask id=\"Task_1sgty32\" name=\"Service Task 1\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_16wegow</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_11dhn54</bpmn:outgoing>\r\n" +
		 * "    </bpmn:serviceTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0nwfrgf\" name=\"UPDATE\" sourceRef=\"ExclusiveGateway_1taafv2\" targetRef=\"Task_03alpx5\" />\r\n"
		 * +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0jts2b7\" sourceRef=\"Task_03alpx5\" targetRef=\"Task_0pxkkqh\" />\r\n"
		 * + "    <bpmn:scriptTask id=\"Task_0pxkkqh\" name=\"Script Task 1\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_0jts2b7</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0eqfc2v</bpmn:outgoing>\r\n" +
		 * "    </bpmn:scriptTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_15jv6fj\" name=\"REDIRECT\" sourceRef=\"ExclusiveGateway_1taafv2\" targetRef=\"Task_1eddb44\" />\r\n"
		 * +
		 * "    <bpmn:businessRuleTask id=\"Task_1eddb44\" name=\"Business Rule Task 1\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_15jv6fj</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_1mxqsjk</bpmn:outgoing>\r\n" +
		 * "    </bpmn:businessRuleTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_1mxqsjk\" sourceRef=\"Task_1eddb44\" targetRef=\"Task_12oz2py\" />\r\n"
		 * + "    <bpmn:sendTask id=\"Task_12oz2py\" name=\"Notification Task 1\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_1mxqsjk</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_1mq1n0m</bpmn:outgoing>\r\n" +
		 * "    </bpmn:sendTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_1mq1n0m\" sourceRef=\"Task_12oz2py\" targetRef=\"ExclusiveGateway_1jyzlhm\" />\r\n"
		 * +
		 * "    <bpmn:parallelGateway id=\"ExclusiveGateway_1jyzlhm\" name=\"Parallel Gateway 1\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_1mq1n0m</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_1bss3tf</bpmn:outgoing>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_156dutn</bpmn:outgoing>\r\n" +
		 * "    </bpmn:parallelGateway>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_1bss3tf\" sourceRef=\"ExclusiveGateway_1jyzlhm\" targetRef=\"EndEvent_0ol8zpe\" />\r\n"
		 * + "    <bpmn:timerTask id=\"Task_1kbe46s\" name=\"Timer Task 1\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_11dhn54</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0h7v4py</bpmn:outgoing>\r\n" +
		 * "    </bpmn:timerTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_11dhn54\" sourceRef=\"Task_1sgty32\" targetRef=\"Task_1kbe46s\" />\r\n"
		 * + "    <bpmn:endEvent id=\"EndEvent_0ol8zpe\" name=\"Approve Process\">\r\n"
		 * + "      <bpmn:incoming>SequenceFlow_0h7v4py</bpmn:incoming>\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_0eqfc2v</bpmn:incoming>\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_1bss3tf</bpmn:incoming>\r\n" +
		 * "    </bpmn:endEvent>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0h7v4py\" sourceRef=\"Task_1kbe46s\" targetRef=\"EndEvent_0ol8zpe\" />\r\n"
		 * + "    <bpmn:endEvent id=\"EndEvent_02p57ae\" name=\"Reject Process\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_156dutn</bpmn:incoming>\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_1m35ywh</bpmn:incoming>\r\n" +
		 * "    </bpmn:endEvent>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_156dutn\" name=\"REJECT\" sourceRef=\"ExclusiveGateway_1jyzlhm\" targetRef=\"EndEvent_02p57ae\" />\r\n"
		 * +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_1m35ywh\" name=\"REJECT\" sourceRef=\"ExclusiveGateway_1k0p8gm\" targetRef=\"EndEvent_02p57ae\" />\r\n"
		 * + "    <bpmn:userTask id=\"Task_19bxtw8\" name=\"User Task 1\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_0bbzb9u</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_1ol6n2d</bpmn:outgoing>\r\n" +
		 * "    </bpmn:userTask>\r\n" +
		 * "    <bpmn:userTask id=\"Task_10flmyb\" name=\"User Task 2\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_0ignc72</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0uawk2b</bpmn:outgoing>\r\n" +
		 * "    </bpmn:userTask>\r\n" +
		 * "    <bpmn:sqlTask id=\"Task_03alpx5\" name=\"Sql Task 1\">\r\n" +
		 * "      <bpmn:incoming>SequenceFlow_0nwfrgf</bpmn:incoming>\r\n" +
		 * "      <bpmn:outgoing>SequenceFlow_0jts2b7</bpmn:outgoing>\r\n" +
		 * "    </bpmn:sqlTask>\r\n" +
		 * "    <bpmn:sequenceFlow id=\"SequenceFlow_0eqfc2v\" sourceRef=\"Task_0pxkkqh\" targetRef=\"EndEvent_0ol8zpe\" />\r\n"
		 * + "    <bpmn:textAnnotation id=\"TextAnnotation_0bvkyok\">\r\n" +
		 * "      <bpmn:text>Not 1</bpmn:text>\r\n" + "    </bpmn:textAnnotation>\r\n" +
		 * "    <bpmn:association id=\"Association_113tjz2\" sourceRef=\"Task_19bxtw8\" targetRef=\"TextAnnotation_0bvkyok\" />\r\n"
		 * + "  </bpmn:process>\r\n" + "  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\r\n"
		 * + "    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\r\n" +
		 * "      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\r\n"
		 * + "        <dc:Bounds x=\"190\" y=\"197\" width=\"36\" height=\"36\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"175\" y=\"240\" width=\"67\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0bbzb9u_di\" bpmnElement=\"SequenceFlow_0bbzb9u\">\r\n"
		 * + "        <di:waypoint x=\"226\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"304\" y=\"215\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"ExclusiveGateway_1taafv2_di\" bpmnElement=\"ExclusiveGateway_1taafv2\" isMarkerVisible=\"true\">\r\n"
		 * + "        <dc:Bounds x=\"482\" y=\"190\" width=\"50\" height=\"50\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"463\" y=\"160\" width=\"88\" height=\"27\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_1ol6n2d_di\" bpmnElement=\"SequenceFlow_1ol6n2d\">\r\n"
		 * + "        <di:waypoint x=\"404\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"482\" y=\"215\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0ignc72_di\" bpmnElement=\"SequenceFlow_0ignc72\">\r\n"
		 * + "        <di:waypoint x=\"532\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"610\" y=\"215\" />\r\n" +
		 * "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"545\" y=\"197\" width=\"53\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0uawk2b_di\" bpmnElement=\"SequenceFlow_0uawk2b\">\r\n"
		 * + "        <di:waypoint x=\"710\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"788\" y=\"215\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"InclusiveGateway_01z9kx4_di\" bpmnElement=\"ExclusiveGateway_1k0p8gm\">\r\n"
		 * + "        <dc:Bounds x=\"788\" y=\"190\" width=\"50\" height=\"50\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"768\" y=\"247\" width=\"90\" height=\"27\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_16wegow_di\" bpmnElement=\"SequenceFlow_16wegow\">\r\n"
		 * + "        <di:waypoint x=\"838\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"916\" y=\"215\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"ServiceTask_1ohzhib_di\" bpmnElement=\"Task_1sgty32\">\r\n"
		 * + "        <dc:Bounds x=\"916\" y=\"175\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0nwfrgf_di\" bpmnElement=\"SequenceFlow_0nwfrgf\">\r\n"
		 * + "        <di:waypoint x=\"507\" y=\"240\" />\r\n" +
		 * "        <di:waypoint x=\"507\" y=\"360\" />\r\n" +
		 * "        <di:waypoint x=\"610\" y=\"360\" />\r\n" +
		 * "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"500\" y=\"297\" width=\"45\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0jts2b7_di\" bpmnElement=\"SequenceFlow_0jts2b7\">\r\n"
		 * + "        <di:waypoint x=\"710\" y=\"360\" />\r\n" +
		 * "        <di:waypoint x=\"788\" y=\"360\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"ScriptTask_0tb6qio_di\" bpmnElement=\"Task_0pxkkqh\">\r\n"
		 * + "        <dc:Bounds x=\"788\" y=\"320\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_15jv6fj_di\" bpmnElement=\"SequenceFlow_15jv6fj\">\r\n"
		 * + "        <di:waypoint x=\"507\" y=\"240\" />\r\n" +
		 * "        <di:waypoint x=\"507\" y=\"518\" />\r\n" +
		 * "        <di:waypoint x=\"610\" y=\"518\" />\r\n" +
		 * "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"494\" y=\"376\" width=\"57\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"BusinessRuleTask_059eqow_di\" bpmnElement=\"Task_1eddb44\">\r\n"
		 * + "        <dc:Bounds x=\"610\" y=\"478\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_1mxqsjk_di\" bpmnElement=\"SequenceFlow_1mxqsjk\">\r\n"
		 * + "        <di:waypoint x=\"710\" y=\"518\" />\r\n" +
		 * "        <di:waypoint x=\"788\" y=\"518\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"SendTask_0phqcb4_di\" bpmnElement=\"Task_12oz2py\">\r\n"
		 * + "        <dc:Bounds x=\"788\" y=\"478\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_1mq1n0m_di\" bpmnElement=\"SequenceFlow_1mq1n0m\">\r\n"
		 * + "        <di:waypoint x=\"888\" y=\"518\" />\r\n" +
		 * "        <di:waypoint x=\"966\" y=\"518\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"ParallelGateway_1rswzb5_di\" bpmnElement=\"ExclusiveGateway_1jyzlhm\">\r\n"
		 * + "        <dc:Bounds x=\"966\" y=\"493\" width=\"50\" height=\"50\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"949\" y=\"463\" width=\"84\" height=\"27\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_1bss3tf_di\" bpmnElement=\"SequenceFlow_1bss3tf\">\r\n"
		 * + "        <di:waypoint x=\"1011\" y=\"513\" />\r\n" +
		 * "        <di:waypoint x=\"1668\" y=\"364\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"Task_1kbe46s_di\" bpmnElement=\"Task_1kbe46s\">\r\n"
		 * +
		 * "        <dc:Bounds x=\"1094\" y=\"175\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_11dhn54_di\" bpmnElement=\"SequenceFlow_11dhn54\">\r\n"
		 * + "        <di:waypoint x=\"1016\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"1094\" y=\"215\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"EndEvent_0ol8zpe_di\" bpmnElement=\"EndEvent_0ol8zpe\">\r\n"
		 * + "        <dc:Bounds x=\"1667\" y=\"342\" width=\"36\" height=\"36\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"1713\" y=\"353\" width=\"84\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0h7v4py_di\" bpmnElement=\"SequenceFlow_0h7v4py\">\r\n"
		 * + "        <di:waypoint x=\"1194\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"1685\" y=\"215\" />\r\n" +
		 * "        <di:waypoint x=\"1685\" y=\"342\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"EndEvent_02p57ae_di\" bpmnElement=\"EndEvent_02p57ae\">\r\n"
		 * + "        <dc:Bounds x=\"1796\" y=\"657\" width=\"36\" height=\"36\" />\r\n"
		 * + "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"1777\" y=\"700\" width=\"75\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_156dutn_di\" bpmnElement=\"SequenceFlow_156dutn\">\r\n"
		 * + "        <di:waypoint x=\"991\" y=\"543\" />\r\n" +
		 * "        <di:waypoint x=\"991\" y=\"675\" />\r\n" +
		 * "        <di:waypoint x=\"1796\" y=\"675\" />\r\n" +
		 * "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"984\" y=\"606\" width=\"44\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_1m35ywh_di\" bpmnElement=\"SequenceFlow_1m35ywh\">\r\n"
		 * + "        <di:waypoint x=\"813\" y=\"190\" />\r\n" +
		 * "        <di:waypoint x=\"813\" y=\"122\" />\r\n" +
		 * "        <di:waypoint x=\"1812\" y=\"122\" />\r\n" +
		 * "        <di:waypoint x=\"1814\" y=\"657\" />\r\n" +
		 * "        <bpmndi:BPMNLabel>\r\n" +
		 * "          <dc:Bounds x=\"1291\" y=\"104\" width=\"44\" height=\"14\" />\r\n"
		 * + "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"UserTask_11pz837_di\" bpmnElement=\"Task_19bxtw8\">\r\n"
		 * + "        <dc:Bounds x=\"304\" y=\"175\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"UserTask_1dx5chc_di\" bpmnElement=\"Task_10flmyb\">\r\n"
		 * + "        <dc:Bounds x=\"610\" y=\"175\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"Task_0wpvzn2_di\" bpmnElement=\"Task_03alpx5\">\r\n"
		 * + "        <dc:Bounds x=\"610\" y=\"320\" width=\"100\" height=\"80\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"SequenceFlow_0eqfc2v_di\" bpmnElement=\"SequenceFlow_0eqfc2v\">\r\n"
		 * + "        <di:waypoint x=\"888\" y=\"360\" />\r\n" +
		 * "        <di:waypoint x=\"1667\" y=\"360\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" +
		 * "      <bpmndi:BPMNShape id=\"TextAnnotation_0bvkyok_di\" bpmnElement=\"TextAnnotation_0bvkyok\">\r\n"
		 * + "        <dc:Bounds x=\"404\" y=\"95\" width=\"100\" height=\"30\" />\r\n"
		 * + "      </bpmndi:BPMNShape>\r\n" +
		 * "      <bpmndi:BPMNEdge id=\"Association_113tjz2_di\" bpmnElement=\"Association_113tjz2\">\r\n"
		 * + "        <di:waypoint x=\"392\" y=\"175\" />\r\n" +
		 * "        <di:waypoint x=\"440\" y=\"125\" />\r\n" +
		 * "      </bpmndi:BPMNEdge>\r\n" + "    </bpmndi:BPMNPlane>\r\n" +
		 * "  </bpmndi:BPMNDiagram>\r\n" + "</bpmn:definitions>\r\n" + "";
		 */

		BpmBaseResult output = processService.saveAsDraft(processXml.getXml());
		return ResponseEntity.status(HttpStatus.OK).body(output);
	}

	@ApiOperation(value = "It compiles and if compilation is successful, it saves the process with its whole information including individual tasks. After this step, process is ready for end users to create and update instances", response = BpmBaseResult.class, responseContainer = "GatewayDto")
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Returns BpmBaseResult containing info, warning, error messages according to operation. Returns saved and updated xml string.", response = BpmBaseResult.class) })
	@PostMapping(path = "/createProcess", consumes = MediaType.APPLICATION_XML_VALUE)
	public ResponseEntity<BpmBaseResult> createProcess(
			@ApiParam(value = "Process xml which is generated by drag&drop page without individual detail information. It only includes general process and diagram info in order to draw process to screen", required = true) @RequestBody ProcessXmlInput processXml) {
		BpmBaseResult output = processService.createProcess(processXml.getXml());
		return ResponseEntity.status(HttpStatus.OK).body(output);
	}

	@ApiOperation(value = "Gets selected Process")
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "Returns BpmBaseResult containing info, warning, error messages according to operation. Returns process xml string which is generated from Process Dto object if process with given process id and version no is found.", response = BpmBaseResult.class) })
	@GetMapping(path = "/findById/{processId}/{version}", produces = "application/json; charset=UTF-8")
	public BpmBaseResult<ProcessDto> findById(
			@ApiParam(value = "Process id string", required = true) @PathVariable String processId,
			@ApiParam(value = "Process version no string", required = true) @PathVariable String version) {
		BpmBaseResult<ProcessDto> output = processService.getProcessByProcessId(Long.parseLong(processId),
				Integer.parseInt(version));
		return output;
	}

	/////////////////////////////// Below methods are test purpose only
	@ApiOperation(value = "Temporarily test purpose method")
	@GetMapping(path = "/getProcessXmlByProcessId", produces = "application/json; charset=UTF-8")
	public BpmBaseResult<String> getProcessXmlByProcessId(@PathVariable Long processId, @PathVariable int version) {
		/*
		 * BpmBaseResult<String> output = processService.getProcessXmlByProcessId(new
		 * ProcessIdInput(11L, 1));
		 */

		BpmBaseResult<String> output = processService.getProcessXmlByProcessId(processId, version);

		return output;
	}

	/////////////////////////////////////////////////////////////////////////////////////////////////////
	@ApiOperation(value = "Temporarily test purpose method")
	@GetMapping(path = "/testProcess", produces = "application/json; charset=UTF-8")
	public BpmBaseResult<String> testProcess() {
		BpmBaseResult<String> output = new BpmBaseResult<String>();
		output.setData("success" + " :)");
		return output;
	}

	@ApiOperation(value = "Temporarily test purpose method")
	@GetMapping(path = "/testXml")
	public BpmBaseResult<String> testXml(@RequestBody String processXml) {
		BpmBaseResult<ProcessDto> result = processService.getProcessByXml(processXml);
		BpmBaseResult<String> result2 = new BpmBaseResult<String>();
		if (result.isSuccessful()) {
			result2 = processService.getProcessXmlByProcess(result.getData());
			return result2;
		}

		result2.addMessages(result.getMessages());

		return result2;
	}

	@ApiOperation(value = "Temporarily test purpose method")
	@GetMapping(path = "/getXml", produces = "application/json; charset=UTF-8")
	public ResponseEntity<BpmBaseResult<String>> getXml(ProcessIdInput processId) {
		BpmBaseResult<String> result = new BpmBaseResult<String>();

		result.setData("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n"
				+ "<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" id=\"Definitions_0w2nuqk\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\r\n"
				+ "  <bpmn:process id=\"123\" isExecutable=\"false\">\r\n"
				+ "    <bpmn:startEvent id=\"11\" name=\"Start\">\r\n" + "      <bpmn:outgoing>33</bpmn:outgoing>\r\n"
				+ "    </bpmn:startEvent>\r\n" + "    <bpmn:task id=\"22\" name=\"User Task 1\">\r\n"
				+ "      <bpmn:incoming>33</bpmn:incoming>\r\n" + "      <bpmn:outgoing>44</bpmn:outgoing>\r\n"
				+ "    </bpmn:task>\r\n" + "    <bpmn:sequenceFlow id=\"33\" sourceRef=\"11\" targetRef=\"22\" />\r\n"
				+ "    <bpmn:endEvent id=\"55\" name=\"End1\">\r\n" + "      <bpmn:incoming>44</bpmn:incoming>\r\n"
				+ "    </bpmn:endEvent>\r\n"
				+ "    <bpmn:sequenceFlow id=\"44\" sourceRef=\"22\" targetRef=\"55\" />\r\n" + "  </bpmn:process>\r\n"
				+ "  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\r\n"
				+ "    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"123\">\r\n"
				+ "      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"11\">\r\n"
				+ "        <dc:Bounds x=\"173\" y=\"102\" width=\"36\" height=\"36\" />\r\n"
				+ "        <bpmndi:BPMNLabel>\r\n"
				+ "          <dc:Bounds x=\"179\" y=\"145\" width=\"25\" height=\"14\" />\r\n"
				+ "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n"
				+ "      <bpmndi:BPMNShape id=\"Task_0p6jxl0_di\" bpmnElement=\"22\">\r\n"
				+ "        <dc:Bounds x=\"259\" y=\"80\" width=\"100\" height=\"80\" />\r\n"
				+ "      </bpmndi:BPMNShape>\r\n"
				+ "      <bpmndi:BPMNEdge id=\"SequenceFlow_0xm73ro_di\" bpmnElement=\"33\">\r\n"
				+ "        <di:waypoint x=\"209\" y=\"120\" />\r\n" + "        <di:waypoint x=\"259\" y=\"120\" />\r\n"
				+ "      </bpmndi:BPMNEdge>\r\n"
				+ "      <bpmndi:BPMNShape id=\"EndEvent_1hlm93r_di\" bpmnElement=\"55\">\r\n"
				+ "        <dc:Bounds x=\"409\" y=\"102\" width=\"36\" height=\"36\" />\r\n"
				+ "        <bpmndi:BPMNLabel>\r\n"
				+ "          <dc:Bounds x=\"414\" y=\"145\" width=\"26\" height=\"14\" />\r\n"
				+ "        </bpmndi:BPMNLabel>\r\n" + "      </bpmndi:BPMNShape>\r\n"
				+ "      <bpmndi:BPMNEdge id=\"SequenceFlow_069dpt4_di\" bpmnElement=\"44\">\r\n"
				+ "        <di:waypoint x=\"359\" y=\"120\" />\r\n" + "        <di:waypoint x=\"409\" y=\"120\" />\r\n"
				+ "      </bpmndi:BPMNEdge>\r\n" + "    </bpmndi:BPMNPlane>\r\n" + "  </bpmndi:BPMNDiagram>\r\n"
				+ "</bpmn:definitions>\r\n" + "");
		return ResponseEntity.status(HttpStatus.OK).body(result);
	}

	// @PostMapping(path = "/test", consumes = MediaType.APPLICATION_XML_VALUE)
	@ApiOperation(value = "Temporarily test purpose method")
	@PostMapping(path = "/test")
	public ResponseEntity<BpmBaseResult> test(@RequestBody String processXml) {
		// BpmBaseResult output = processService.compileProcess(processXml);
		BpmBaseResult<String> output = new BpmBaseResult<>();
		output.setData(processXml);
		return ResponseEntity.status(HttpStatus.OK).body(output);
	}

}
